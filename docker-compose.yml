version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: "todolistdb"
      POSTGRES_USER: "admin"
      POSTGRES_PASSWORD: "Admin*123"

  # pgAdmin Web Interface
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_container
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@admin.com"
      PGADMIN_DEFAULT_PASSWORD: "Admin*123"
    depends_on:
      - db
    links:
      - db:postgres
    networks:
      - monitoring

  # .API TODO LIST
  web:
    build:
      context: .
      dockerfile: src/ToDoList.API/Dockerfile
    container_name: dotnet_app
    restart: always
    ports:
      - "5005:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ConnectionStrings__DefaultConnection: "Host=db;Database=todolistdb;Username=admin;Password=Admin*123"
    depends_on:
      - db
    links:
      - db
    networks:
      - monitoring

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - monitoring
    depends_on:
      - web
  
  # Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - monitoring
    depends_on:
      - prometheus

networks:
  monitoring:

volumes:
  grafana-storage:
